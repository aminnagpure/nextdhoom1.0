@model WebApplication13.Models.joblistn

@{
    ViewBag.Title = "Edit";
    
}



    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Edit Job</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Jobid)
            @Html.HiddenFor(model => model.isApproved) 
            <div class="form-group">
                
                <div class="col-md-10">
                    @Html.Hidden("memsid")
                    @Html.ValidationMessageFor(model => model.memsid)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.jobcategoryid, "jobcategoryid", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("jobcategoryid", String.Empty)
                    @Html.ValidationMessageFor(model => model.jobcategoryid)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.sysentrydate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.sysentrydate)
                    @Html.ValidationMessageFor(model => model.sysentrydate)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.designation, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.designation)
                    @Html.ValidationMessageFor(model => model.designation)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.jobdescription, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.jobdescription)
                    @Html.ValidationMessageFor(model => model.jobdescription)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.minexp, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.minexp)
                    @Html.ValidationMessageFor(model => model.minexp)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.maxexp, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.maxexp)
                    @Html.ValidationMessageFor(model => model.maxexp)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.salary, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.salary)
                    @Html.ValidationMessageFor(model => model.salary)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.countryid, "countryid", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("countryid")
                    @Html.ValidationMessageFor(model => model.countryid)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.stateid, "stateid", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("stateid")
                    @Html.ValidationMessageFor(model => model.stateid)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cityid, "cityid", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("cityid", String.Empty)
                    @Html.ValidationMessageFor(model => model.cityid)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.contact, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.contact)
                    @Html.ValidationMessageFor(model => model.contact)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.telephone, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.telephone)
                    @Html.ValidationMessageFor(model => model.telephone)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email)
                    @Html.ValidationMessageFor(model => model.email)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.website, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.website)
                    @Html.ValidationMessageFor(model => model.website)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
<script type="text/jscript">
    $(function () {

      

        $('#stateid').ready(function () {
            var stid=$('#stateid').val();

            //$('#stateid').empty();
            //$('#cityid').empty();

            $.getJSON('/Kas/StateList/' + $('#countryid').val(), function (data) {
                var items = '';
                $.each(data, function (i, stateid) {
                    items += "<option value='" + stateid.Value + "'>" + stateid.Text + "</option>";
                });

                
                $('#stateid').html(items);
                $('#stateid').val(stid);
                $('#stateid').trigger("change")
                

            });
        });



        $('#countryid').change(function () {

            $.getJSON('/Kas/StateList/' + $('#countryid').val(), function (data) {
                var items = '<option>Select a State</option>';
                $.each(data, function (i, stateid) {
                    items += "<option value='" + stateid.Value + "'>" + stateid.Text + "</option>";
                });
                $('#stateid').html(items);

            });
        });


        $('#stateid').change(function () {
            var citid = $('#cityid').val();

            $.getJSON('/Kas/Citylist/' + $('#stateid').val(), function (data) {
                var items = '';
                $.each(data, function (i, cityid) {
                    items += "<option value='" + cityid.Value + "'>" + cityid.Text + "</option>";
                });
                $('#cityid').html(items);
                $('#cityid').val(citid);




            });
        });





    });

</script>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
