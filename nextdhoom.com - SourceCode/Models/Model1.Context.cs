//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication13.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class nextdhoomEntities : DbContext
    {
        public nextdhoomEntities()
            : base("name=nextdhoomEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<citytable> citytables { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<meminvite> meminvites { get; set; }
        public virtual DbSet<Mem> Mems { get; set; }
        public virtual DbSet<Photo> Photos { get; set; }
        public virtual DbSet<state> states { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<jobcategory> jobcategories { get; set; }
        public virtual DbSet<joblistn> joblistns { get; set; }
        public virtual DbSet<ForumMainCategory> ForumMainCategories { get; set; }
        public virtual DbSet<ForumSubCategory> ForumSubCategories { get; set; }
        public virtual DbSet<ForumTopic> ForumTopics { get; set; }
        public virtual DbSet<ForumTopicAnswer> ForumTopicAnswers { get; set; }
        public virtual DbSet<NewsCatmaster> NewsCatmasters { get; set; }
        public virtual DbSet<Jokescatmaster> Jokescatmasters { get; set; }
        public virtual DbSet<tbl_Jokes> tbl_Jokes { get; set; }
        public virtual DbSet<User_Complaints> User_Complaints { get; set; }
        public virtual DbSet<User_Complaints_Comments> User_Complaints_Comments { get; set; }
    
        public virtual int Editmem(Nullable<long> memsid, string fname, string lname, string passw, string gender, Nullable<short> countryid, Nullable<short> stateid, Nullable<short> cityid, string aboutme, string isJobseeker, Nullable<short> jobcategoryid, string designation)
        {
            var memsidParameter = memsid.HasValue ?
                new ObjectParameter("memsid", memsid) :
                new ObjectParameter("memsid", typeof(long));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var passwParameter = passw != null ?
                new ObjectParameter("passw", passw) :
                new ObjectParameter("passw", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(short));
    
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(short));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(short));
    
            var aboutmeParameter = aboutme != null ?
                new ObjectParameter("aboutme", aboutme) :
                new ObjectParameter("aboutme", typeof(string));
    
            var isJobseekerParameter = isJobseeker != null ?
                new ObjectParameter("isJobseeker", isJobseeker) :
                new ObjectParameter("isJobseeker", typeof(string));
    
            var jobcategoryidParameter = jobcategoryid.HasValue ?
                new ObjectParameter("jobcategoryid", jobcategoryid) :
                new ObjectParameter("jobcategoryid", typeof(short));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Editmem", memsidParameter, fnameParameter, lnameParameter, passwParameter, genderParameter, countryidParameter, stateidParameter, cityidParameter, aboutmeParameter, isJobseekerParameter, jobcategoryidParameter, designationParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<viewprofilemem_Result> viewprofilemem(Nullable<long> memsid)
        {
            var memsidParameter = memsid.HasValue ?
                new ObjectParameter("memsid", memsid) :
                new ObjectParameter("memsid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewprofilemem_Result>("viewprofilemem", memsidParameter);
        }
    
        public virtual ObjectResult<jobmemlist_Result> jobmemlist(Nullable<long> memsid)
        {
            var memsidParameter = memsid.HasValue ?
                new ObjectParameter("memsid", memsid) :
                new ObjectParameter("memsid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<jobmemlist_Result>("jobmemlist", memsidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> User_Complaints_Add(string userMobile, string emailID, string userName, string complaintHead, string complaintDesc)
        {
            var userMobileParameter = userMobile != null ?
                new ObjectParameter("UserMobile", userMobile) :
                new ObjectParameter("UserMobile", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var complaintHeadParameter = complaintHead != null ?
                new ObjectParameter("ComplaintHead", complaintHead) :
                new ObjectParameter("ComplaintHead", typeof(string));
    
            var complaintDescParameter = complaintDesc != null ?
                new ObjectParameter("ComplaintDesc", complaintDesc) :
                new ObjectParameter("ComplaintDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("User_Complaints_Add", userMobileParameter, emailIDParameter, userNameParameter, complaintHeadParameter, complaintDescParameter);
        }
    
        public virtual int ForumAddCategory(string forumcategoryn, string descrip, Nullable<long> memsid, ObjectParameter rowEffect, Nullable<System.DateTime> startDate)
        {
            var forumcategorynParameter = forumcategoryn != null ?
                new ObjectParameter("forumcategoryn", forumcategoryn) :
                new ObjectParameter("forumcategoryn", typeof(string));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var memsidParameter = memsid.HasValue ?
                new ObjectParameter("Memsid", memsid) :
                new ObjectParameter("Memsid", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumAddCategory", forumcategorynParameter, descripParameter, memsidParameter, rowEffect, startDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> forumCheckSubCat(Nullable<int> cAtId, string subCAtTitle)
        {
            var cAtIdParameter = cAtId.HasValue ?
                new ObjectParameter("CAtId", cAtId) :
                new ObjectParameter("CAtId", typeof(int));
    
            var subCAtTitleParameter = subCAtTitle != null ?
                new ObjectParameter("SubCAtTitle", subCAtTitle) :
                new ObjectParameter("SubCAtTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("forumCheckSubCat", cAtIdParameter, subCAtTitleParameter);
        }
    
        public virtual int ForumdeleteAnswer(Nullable<long> ansId)
        {
            var ansIdParameter = ansId.HasValue ?
                new ObjectParameter("AnsId", ansId) :
                new ObjectParameter("AnsId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumdeleteAnswer", ansIdParameter);
        }
    
        public virtual int ForumDeleteCategory(Nullable<long> catid)
        {
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumDeleteCategory", catidParameter);
        }
    
        public virtual int forumdeleteTopic(Nullable<long> topicId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("TopicId", topicId) :
                new ObjectParameter("TopicId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("forumdeleteTopic", topicIdParameter);
        }
    
        public virtual ObjectResult<forumgetAllCategory_Result> forumgetAllCategory(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<forumgetAllCategory_Result>("forumgetAllCategory", idParameter);
        }
    
        public virtual int ForumgetSubCategory(Nullable<int> mid)
        {
            var midParameter = mid.HasValue ?
                new ObjectParameter("mid", mid) :
                new ObjectParameter("mid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumgetSubCategory", midParameter);
        }
    
        public virtual int ForumgetTopicAnswer(Nullable<int> startRowIndex, Nullable<int> maximumRows, Nullable<long> criteria)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            var criteriaParameter = criteria.HasValue ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumgetTopicAnswer", startRowIndexParameter, maximumRowsParameter, criteriaParameter);
        }
    
        public virtual int ForumgetTopicDetails(Nullable<long> topicId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("TopicId", topicId) :
                new ObjectParameter("TopicId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumgetTopicDetails", topicIdParameter);
        }
    
        public virtual ObjectResult<ForumgetTopics_Result> ForumgetTopics(string criteria)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ForumgetTopics_Result>("ForumgetTopics", criteriaParameter);
        }
    
        public virtual int ForumgetUnApproveAnswer(Nullable<int> startRowIndex, Nullable<int> maximumRows, string criteria)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumgetUnApproveAnswer", startRowIndexParameter, maximumRowsParameter, criteriaParameter);
        }
    
        public virtual int ForumgetUnApproveTopics(Nullable<int> startRowIndex, Nullable<int> maximumRows, string criteria)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumgetUnApproveTopics", startRowIndexParameter, maximumRowsParameter, criteriaParameter);
        }
    
        public virtual int forumInsertAnswer(Nullable<long> topicId, string topicAns, Nullable<long> memsid, Nullable<System.DateTime> ansDate, string updateyByName)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("TopicId", topicId) :
                new ObjectParameter("TopicId", typeof(long));
    
            var topicAnsParameter = topicAns != null ?
                new ObjectParameter("TopicAns", topicAns) :
                new ObjectParameter("TopicAns", typeof(string));
    
            var memsidParameter = memsid.HasValue ?
                new ObjectParameter("memsid", memsid) :
                new ObjectParameter("memsid", typeof(long));
    
            var ansDateParameter = ansDate.HasValue ?
                new ObjectParameter("AnsDate", ansDate) :
                new ObjectParameter("AnsDate", typeof(System.DateTime));
    
            var updateyByNameParameter = updateyByName != null ?
                new ObjectParameter("UpdateyByName", updateyByName) :
                new ObjectParameter("UpdateyByName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("forumInsertAnswer", topicIdParameter, topicAnsParameter, memsidParameter, ansDateParameter, updateyByNameParameter);
        }
    
        public virtual int forumInsertTopic(string topicTitle, string topicDesc, Nullable<long> catId, Nullable<long> subCatId, Nullable<long> memsid, string updateCandiName, Nullable<long> updateCandiId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> updateDate)
        {
            var topicTitleParameter = topicTitle != null ?
                new ObjectParameter("TopicTitle", topicTitle) :
                new ObjectParameter("TopicTitle", typeof(string));
    
            var topicDescParameter = topicDesc != null ?
                new ObjectParameter("TopicDesc", topicDesc) :
                new ObjectParameter("TopicDesc", typeof(string));
    
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(long));
    
            var subCatIdParameter = subCatId.HasValue ?
                new ObjectParameter("SubCatId", subCatId) :
                new ObjectParameter("SubCatId", typeof(long));
    
            var memsidParameter = memsid.HasValue ?
                new ObjectParameter("memsid", memsid) :
                new ObjectParameter("memsid", typeof(long));
    
            var updateCandiNameParameter = updateCandiName != null ?
                new ObjectParameter("UpdateCandiName", updateCandiName) :
                new ObjectParameter("UpdateCandiName", typeof(string));
    
            var updateCandiIdParameter = updateCandiId.HasValue ?
                new ObjectParameter("UpdateCandiId", updateCandiId) :
                new ObjectParameter("UpdateCandiId", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("forumInsertTopic", topicTitleParameter, topicDescParameter, catIdParameter, subCatIdParameter, memsidParameter, updateCandiNameParameter, updateCandiIdParameter, startDateParameter, updateDateParameter);
        }
    
        public virtual int forumInsertSubCat(Nullable<long> catId, string subCatTitle, string subCatDesc, Nullable<System.DateTime> startDate, Nullable<long> startedBy, Nullable<long> memsid, ObjectParameter rowEffect)
        {
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(long));
    
            var subCatTitleParameter = subCatTitle != null ?
                new ObjectParameter("SubCatTitle", subCatTitle) :
                new ObjectParameter("SubCatTitle", typeof(string));
    
            var subCatDescParameter = subCatDesc != null ?
                new ObjectParameter("SubCatDesc", subCatDesc) :
                new ObjectParameter("SubCatDesc", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var startedByParameter = startedBy.HasValue ?
                new ObjectParameter("StartedBy", startedBy) :
                new ObjectParameter("StartedBy", typeof(long));
    
            var memsidParameter = memsid.HasValue ?
                new ObjectParameter("memsid", memsid) :
                new ObjectParameter("memsid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("forumInsertSubCat", catIdParameter, subCatTitleParameter, subCatDescParameter, startDateParameter, startedByParameter, memsidParameter, rowEffect);
        }
    
        public virtual int ForumAproveTopic(Nullable<long> topicId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("topicId", topicId) :
                new ObjectParameter("topicId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumAproveTopic", topicIdParameter);
        }
    
        public virtual int ForumAproveTopicAns(Nullable<long> ansId)
        {
            var ansIdParameter = ansId.HasValue ?
                new ObjectParameter("AnsId", ansId) :
                new ObjectParameter("AnsId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumAproveTopicAns", ansIdParameter);
        }
    
        public virtual int ForumUnAproveTopic(Nullable<long> topicId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("TopicId", topicId) :
                new ObjectParameter("TopicId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumUnAproveTopic", topicIdParameter);
        }
    
        public virtual int ForumUnAproveTopicAns(Nullable<long> ansId)
        {
            var ansIdParameter = ansId.HasValue ?
                new ObjectParameter("AnsId", ansId) :
                new ObjectParameter("AnsId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForumUnAproveTopicAns", ansIdParameter);
        }
    
        public virtual int ResumeMem(Nullable<long> memsid)
        {
            var memsidParameter = memsid.HasValue ?
                new ObjectParameter("memsid", memsid) :
                new ObjectParameter("memsid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ResumeMem", memsidParameter);
        }
    
        public virtual int SuspendMem(Nullable<long> memsid)
        {
            var memsidParameter = memsid.HasValue ?
                new ObjectParameter("memsid", memsid) :
                new ObjectParameter("memsid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SuspendMem", memsidParameter);
        }
    
        public virtual int jobApprove(Nullable<long> jobid)
        {
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("jobid", jobid) :
                new ObjectParameter("jobid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("jobApprove", jobidParameter);
        }
    
        public virtual int jobUnApprove(Nullable<long> jobid)
        {
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("jobid", jobid) :
                new ObjectParameter("jobid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("jobUnApprove", jobidParameter);
        }
    
        public virtual int User_Complaints_Comments_Add(Nullable<long> complaintsID, string comments, Nullable<long> commentsBy, string commentsByName, string isAdmin, Nullable<System.DateTime> commentsDate, string resolved)
        {
            var complaintsIDParameter = complaintsID.HasValue ?
                new ObjectParameter("ComplaintsID", complaintsID) :
                new ObjectParameter("ComplaintsID", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var commentsByParameter = commentsBy.HasValue ?
                new ObjectParameter("CommentsBy", commentsBy) :
                new ObjectParameter("CommentsBy", typeof(long));
    
            var commentsByNameParameter = commentsByName != null ?
                new ObjectParameter("CommentsByName", commentsByName) :
                new ObjectParameter("CommentsByName", typeof(string));
    
            var isAdminParameter = isAdmin != null ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(string));
    
            var commentsDateParameter = commentsDate.HasValue ?
                new ObjectParameter("CommentsDate", commentsDate) :
                new ObjectParameter("CommentsDate", typeof(System.DateTime));
    
            var resolvedParameter = resolved != null ?
                new ObjectParameter("Resolved", resolved) :
                new ObjectParameter("Resolved", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User_Complaints_Comments_Add", complaintsIDParameter, commentsParameter, commentsByParameter, commentsByNameParameter, isAdminParameter, commentsDateParameter, resolvedParameter);
        }
    
        public virtual ObjectResult<User_Complaints_VerifyUser_Result> User_Complaints_VerifyUser(string mobile, string emailID, Nullable<long> complaintsID)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var complaintsIDParameter = complaintsID.HasValue ?
                new ObjectParameter("ComplaintsID", complaintsID) :
                new ObjectParameter("ComplaintsID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User_Complaints_VerifyUser_Result>("User_Complaints_VerifyUser", mobileParameter, emailIDParameter, complaintsIDParameter);
        }
    
        public virtual int UserComplaints_Comments_Delete(Nullable<long> commentID)
        {
            var commentIDParameter = commentID.HasValue ?
                new ObjectParameter("CommentID", commentID) :
                new ObjectParameter("CommentID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserComplaints_Comments_Delete", commentIDParameter);
        }
    
        public virtual int UserComplaints_Delete(Nullable<long> complaintsID)
        {
            var complaintsIDParameter = complaintsID.HasValue ?
                new ObjectParameter("ComplaintsID", complaintsID) :
                new ObjectParameter("ComplaintsID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserComplaints_Delete", complaintsIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> insertNewCar(Nullable<long> memsid, Nullable<long> makeid, Nullable<long> modelID, string version, Nullable<long> price, string pname, string email, Nullable<short> stateid, Nullable<short> cityid, string mobile, Nullable<System.DateTime> ldate, Nullable<short> countryId)
        {
            var memsidParameter = memsid.HasValue ?
                new ObjectParameter("memsid", memsid) :
                new ObjectParameter("memsid", typeof(long));
    
            var makeidParameter = makeid.HasValue ?
                new ObjectParameter("Makeid", makeid) :
                new ObjectParameter("Makeid", typeof(long));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(long));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(long));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("Stateid", stateid) :
                new ObjectParameter("Stateid", typeof(short));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(short));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var ldateParameter = ldate.HasValue ?
                new ObjectParameter("Ldate", ldate) :
                new ObjectParameter("Ldate", typeof(System.DateTime));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("countryId", countryId) :
                new ObjectParameter("countryId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("insertNewCar", memsidParameter, makeidParameter, modelIDParameter, versionParameter, priceParameter, pnameParameter, emailParameter, stateidParameter, cityidParameter, mobileParameter, ldateParameter, countryIdParameter);
        }
    
        public virtual ObjectResult<joblistn> MyJob_Search(string criteria)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<joblistn>("MyJob_Search", criteriaParameter);
        }
    
        public virtual ObjectResult<joblistn> MyJob_Search(string criteria, MergeOption mergeOption)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<joblistn>("MyJob_Search", mergeOption, criteriaParameter);
        }
    
        public virtual ObjectResult<joblistn> Job_Search(string criteria)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<joblistn>("Job_Search", criteriaParameter);
        }
    
        public virtual ObjectResult<joblistn> Job_Search(string criteria, MergeOption mergeOption)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<joblistn>("Job_Search", mergeOption, criteriaParameter);
        }
    
        public virtual ObjectResult<jobbySearchnpage_Result> jobbySearchnpage(Nullable<int> startRowIndex, Nullable<int> maximumRows, string crteria, ObjectParameter count)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            var crteriaParameter = crteria != null ?
                new ObjectParameter("crteria", crteria) :
                new ObjectParameter("crteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<jobbySearchnpage_Result>("jobbySearchnpage", startRowIndexParameter, maximumRowsParameter, crteriaParameter, count);
        }
    
        public virtual ObjectResult<memberbySearch_Result> memberbySearch(Nullable<int> startRowIndex, Nullable<int> maximumRows, string crteria, ObjectParameter count)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            var crteriaParameter = crteria != null ?
                new ObjectParameter("crteria", crteria) :
                new ObjectParameter("crteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<memberbySearch_Result>("memberbySearch", startRowIndexParameter, maximumRowsParameter, crteriaParameter, count);
        }
    }
}
